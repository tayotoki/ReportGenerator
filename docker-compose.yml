version: '3.8'

x-app_environment: &app_environment
  environment:
    - DEBUG
    - API_DOCS_ENABLE
    - SECRET_KEY
    - POSTGRES_PASSWORD
    - POSTGRES_HOST
    - POSTGRES_PORT
    - POSTGRES_NAME
    - POSTGRES_USER
    - SITE_HOST
    - SENTRY_DSN
    - FLOWER_BASIC_AUTH




services:
  nginx:
    image: nginx:latest
    volumes:
      - nginx_cache:/var/lib/nginx/proxy_cache
      - static:/var/www/static/
    build:
      context: ./nginx
    depends_on:
      - backend
    ports:
      - 80:80
      - 443:443
    environment:
      - TLS_MODE
      - TLS_MODE_SECOND
      - HTPASSWD_NODE
      - MONITORING_HTPASSWD
      - HTPASSWD

  db:
    image: postgres:13.3-alpine
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD
      - POSTGRES_PORT
      - POSTGRES_NAME
      - POSTGRES_USER


  backend:
    image: backend:${TAG:-latest}
    build:
      context: ./backend
    <<: *app_environment
    depends_on:
      - db

  redis:
    image: redis:6.2-alpine
    volumes:
      - redisdata:/data

  celery:
    image: backend:${TAG:-latest}
    command: celery -A config worker -l info -c 1 -n celery@dats.com -Q celery
    depends_on:
      - db
      - redis
    <<: *app_environment

  celery-beat:
    image: registry.gitlab.idacloud.ru/idaproject/neometry/neometry-site/backend:${TAG:-latest}
    command: celery -A config worker -l info -E -B
    depends_on:
      - db
      - redis
    <<: *app_environment

  flower:
    image: flower:${TAG:-latest}
    command: >
      celery flower
      --address=0.0.0.0
      --port=5555
      --url_prefix=flower
      --persistent=True
      --purge_ofline_workers=True
    build:
      context: ./flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
      - FLOWER_BASIC_AUTH
    depends_on:
      - celery
      - celery-beat
